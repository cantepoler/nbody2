Which GRASP patterns / design principles are we applying in doing the refactoring ? And each of the extensions ? Why do you say so ?
The patterns and design principles that are being used in the code, are Expert, due to the class universe having the information of bodies and updates them. Also, because now the draw code isn't between 3 different function, we have less coupling, we don't repeat the code which also brings us more cohesion. Also, by changing the names, we make more understandable code and, by changing privacity of atributes and methods, we prevent external classes to access unnecessary data.
The first extension applies the creator pattern, as to create the simulation we are creating a class that lets us closely use and create an universe, also bringing us more cohesion.
The second extension applies the polymorphism, due to doing functions with the same name that varies the lets us select, and also Universe doesn't know which method is he calling so it has less coupling and makes code more cohesive.
